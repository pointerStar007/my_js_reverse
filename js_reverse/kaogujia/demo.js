const cryptoJs = require("crypto-js")
const decrypt = function(url, text) {
    if ("string" != typeof url)
        return;
    const str = function(str) {
        const encode2 = encodeURI(str);
        return btoa(encode2)
    }(url).repeat(3)
      , orgKey = str.slice(0, 16)
      , orgIv = str.slice(12, 28)
      , ikey = cryptoJs.enc.Utf8.parse(orgKey)
      , iiv = cryptoJs.enc.Utf8.parse(orgIv);
    return cryptoJs.AES.decrypt(text, ikey, {
        iv: iiv,
        mode: cryptoJs.mode.CBC,
        padding: cryptoJs.pad.Pkcs7
    }).toString(cryptoJs.enc.Utf8)
};
url = "/api/userstaging/discover/allow"
text = "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"
text = decrypt(url,text)
console.log(text)